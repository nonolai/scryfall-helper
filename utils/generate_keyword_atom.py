#!/usr/local/bin/python3

import re
import urllib.request

# Link to the text doc format of the comprehensive rules from:
# https://magic.wizards.com/en/game-info/gameplay/rules-and-formats/rules
COMP_RULES_URL = (
    "https://media.wizards.com/2021/downloads/MagicCompRules%2020211115.txt"
)


OUTPUT_TEMPLATE = """import {{ Atom }} from 'atoms/atoms';

/**
 * Atom for searching for cards with a particular keyword.
 *
 * Generated by: ./utils/generate_keyword_atom.py > src/atoms/keyword.js
 *
 * TODO: Some keywords have spaces. Accepting these when suggested should wrap
 *   the whole value in double quotes.
 */
export const KEYWORD_ATOM = new Atom(
    ['keyword'],
    [':'],
    [
{atom_list}
    ],
);"""


# All keyword abilities show up as subsection headers under rule 702.
# 702.1 explains abilities and should be skipped.
KEYWORD_ABILITY_REGEX = re.compile(r"^702\.(\d+)\. ([A-Za-z -]*)\s*$")

# We need to comment out some of the keywords :(
COMMENT_LEAD = "// "


def line_for_ability(ability):
    """Format an entry in the Javascript list of ability keywords."""
    leader = "// " if " " in ability else ""
    return f"        {leader}'{ability.lower()}',"


def main():
    response = urllib.request.urlopen(COMP_RULES_URL)
    lines = response.read().decode("utf-8").split("\n")

    values = []
    for line in lines:
        matches = KEYWORD_ABILITY_REGEX.match(line)
        if not matches:
            continue

        number = matches[1]
        if number == "1":
            continue

        ability = matches[2]
        if ability == "Daybound and Nightbound":
            values.append(line_for_ability("Daybound"))
            values.append(line_for_ability("Nightbound"))
            continue

        values.append(line_for_ability(ability))

    print(OUTPUT_TEMPLATE.format(atom_list="\n".join(values)))


if __name__ == "__main__":
    main()
